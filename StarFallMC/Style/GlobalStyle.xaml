<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:starFallMc="clr-namespace:StarFallMC"
                    xmlns:comp="clr-namespace:StarFallMC.Component"
                    xmlns:extension="clr-namespace:StarFallMC.Util.Extension">
    
    <SolidColorBrush x:Key="PrimaryBrush" Color="#fff"></SolidColorBrush>
    <SolidColorBrush x:Key="PrimaryBrush_1" Color="#fff"></SolidColorBrush>
    <SolidColorBrush x:Key="PrimaryBrush_2" Color="#fff"></SolidColorBrush>
    <SolidColorBrush x:Key="PrimaryBrush_3" Color="#fff"></SolidColorBrush>
    <SolidColorBrush x:Key="PrimaryBrush_4" Color="#fff"></SolidColorBrush>
    <SolidColorBrush x:Key="SecondaryBrush" Color="#fff"></SolidColorBrush>
    <SolidColorBrush x:Key="SecondaryBrush_1" Color="#fff"></SolidColorBrush>
    <SolidColorBrush x:Key="SecondaryBrush_2" Color="#fff"></SolidColorBrush>
    
    <FontFamily x:Key="IconFontFamily">/StarFallMC;Component/assets/icon/#iconfont,微软雅黑</FontFamily>
    
    <ElasticEase x:Key="ElasticEaseOut" Oscillations="1" Springiness="10" EasingMode="EaseOut"></ElasticEase>
    <ElasticEase x:Key="ElasticEaseIn" Oscillations="1" Springiness="10" EasingMode="EaseIn"></ElasticEase>
    <CubicEase x:Key="CubicEase"></CubicEase>
    
    <BitmapImage x:Key="CurrentGameIcon" UriSource="../assets/DefaultGameIcon/unknowGame.png" 
                 CacheOption="OnLoad" CreateOptions="IgnoreImageCache"/>
    <BitmapImage x:Key="PlayerSkin" UriSource="../assets/steve.png" 
                 CacheOption="OnLoad" CreateOptions="IgnoreImageCache"/>
    
    <Style x:Key="FrameBg" TargetType="Border">
        <Setter Property="Background" Value="#f1f1f1"></Setter>
        <Setter Property="CornerRadius" Value="0 0 10 10"></Setter>
        <Setter Property="Opacity" Value="0.6"></Setter>
    </Style>
    
    <Style TargetType="TextBlock">
        <Setter Property="FontWeight" Value="Bold"></Setter>
        <Setter Property="FontFamily" Value="微软雅黑"></Setter>
        <Setter Property="Foreground" Value="{DynamicResource SecondaryBrush_2}"></Setter>
        <Setter Property="UseLayoutRounding" Value="True"></Setter>
        <Setter Property="SnapsToDevicePixels" Value="True"></Setter>
        <Setter Property="TextOptions.TextFormattingMode" Value="Display"></Setter>
        <Setter Property="TextOptions.TextRenderingMode" Value="ClearType"></Setter>
    </Style>
    
    <Style TargetType="ToolTip">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToolTip">
                    <Border Name="Border" 
                            Background="{DynamicResource PrimaryBrush}" 
                            CornerRadius="5" Padding="5" 
                            BorderBrush="{DynamicResource SecondaryBrush_1}" 
                            BorderThickness="1" Opacity="0">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center">
                            <ContentPresenter.Content>
                                <TextBlock Text="{TemplateBinding Content}" 
                                           Foreground="{DynamicResource SecondaryBrush}"></TextBlock>
                            </ContentPresenter.Content>
                        </ContentPresenter>
                    </Border>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="Opened">
                            <BeginStoryboard>
                                <Storyboard TargetName="Border" TargetProperty="Opacity" >
                                    <DoubleAnimation Duration="0:0:0.2" To="1" 
                                                     EasingFunction="{StaticResource CubicEase}"></DoubleAnimation>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="NoAnimRect" TargetType="Border">
        <Setter Property="Background" Value="{DynamicResource PrimaryBrush}"></Setter>
        <Setter Property="BorderThickness" Value="1"></Setter>
        <Setter Property="CornerRadius" Value="5"></Setter>
        <Setter Property="BorderBrush" Value="{DynamicResource SecondaryBrush}"></Setter>
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect Color="Black" ShadowDepth="2" BlurRadius="20" Opacity="0.3"></DropShadowEffect>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="Rect" TargetType="Border" BasedOn="{StaticResource NoAnimRect}">
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect Color="Black" ShadowDepth="2" BlurRadius="20" Opacity="0"></DropShadowEffect>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard
                            TargetProperty="Effect.Opacity">
                            <DoubleAnimation Duration="0:0:0.2" To="0.3"></DoubleAnimation>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard TargetProperty="Effect.Opacity">
                            <DoubleAnimation Duration="0:0:0.2" To="0"></DoubleAnimation>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <Style x:Key="RectByMargin" TargetType="Border" BasedOn="{StaticResource Rect}">
        <Setter Property="Margin" Value="20 10"/>
    </Style>
    
    <Style x:Key="RectTitle" TargetType="TextBlock" 
           BasedOn="{StaticResource {x:Type TextBlock}}">
        <Setter Property="FontSize" Value="15"></Setter>
        <Setter Property="Margin" Value="10 10 0 0"></Setter>
        <Setter Property="Foreground" Value="{DynamicResource SecondaryBrush_1}"></Setter>
    </Style>
    
    <Style TargetType="{x:Type comp:Button}">
        <Setter Property="FontSize" Value="14"></Setter>
        <Setter Property="FontWeight" Value="Bold"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type comp:Button}">
                    <Border CornerRadius="5" Opacity="1">
                        <Border Name="Container" CornerRadius="5" RenderTransformOrigin="0.5,0.5">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center">
                                <ContentPresenter.Resources>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="Foreground" Value="{DynamicResource PrimaryBrush}"></Setter>
                                        <Setter Property="FontSize" Value="14"></Setter>
                                        <Setter Property="FontWeight" Value="Bold"></Setter>
                                    </Style>
                                </ContentPresenter.Resources>
                            </ContentPresenter>
                        </Border>
                    </Border>
                    <ControlTemplate.Resources>
                        <Style TargetType="TextBlock">
                            <Setter Property="Foreground" Value="{DynamicResource PrimaryBrush}"></Setter>
                            <Setter Property="FontWeight" Value="Bold"></Setter>
                        </Style>
                    </ControlTemplate.Resources>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type comp:PlainButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type comp:PlainButton}">
                    <Border CornerRadius="5" Opacity="1">
                        <Border Name="Container" BorderBrush="{DynamicResource SecondaryBrush_2}"
                                BorderThickness="1" CornerRadius="5" 
                                RenderTransformOrigin="0.5,0.5">
                            <ContentPresenter Name="ContentPresenter" 
                                              HorizontalAlignment="Center" VerticalAlignment="Center"></ContentPresenter>
                        </Border>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="{x:Type comp:ButtonBase}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type comp:ButtonBase}">
                    <Border Background="{DynamicResource PrimaryBrush}">
                        <ContentPresenter></ContentPresenter>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="comp:TextButton">
        <Setter Property="HorizontalAlignment" Value="Center"></Setter>
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
        <Setter Property="RenderTransformOrigin" Value="0.5,0.5"></Setter>
        <Setter Property="FontFamily" Value="{StaticResource IconFontFamily}"></Setter>
        <Setter Property="FontSize" Value="14"></Setter>
        <Setter Property="FontWeight" Value="Bold"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="comp:TextButton">
                    <Grid>
                        <TextBlock Name="TextContent" Text="{TemplateBinding Content}"
                                   FontFamily="{TemplateBinding FontFamily}"
                                   FontSize="{TemplateBinding FontSize}"
                                   FontWeight="{TemplateBinding FontWeight}"
                                   FontStretch="{TemplateBinding FontStretch}"
                                   FontStyle="{TemplateBinding FontStyle}"></TextBlock>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="ScrollViewer">
        <Setter Property="CanContentScroll" Value="True"></Setter>
        <Setter Property="extension:ScrollViewerExtensions.SmoothScroll" Value="True"></Setter>
        <Setter Property="extension:ScrollViewerBehavior.VerticalOffset" Value="{Binding VerticalOffset, Mode=TwoWay}"></Setter>
    </Style>
    
    <Style TargetType="Thumb">
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="Width" Value="6"></Setter>
        <Setter Property="IsTabStop" Value="False"></Setter>
        <Setter Property="BorderThickness" Value="0"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Thumb">
                    <Border
                        Background="{DynamicResource SecondaryBrush_2}"
                        CornerRadius="5"
                    ></Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ScrollBar">
        <Setter Property="OverridesDefaultStyle" Value="True"></Setter>
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="Width" Value="10"></Setter>
        <Setter Property="Opacity" Value="0.1"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ScrollBar">
                    <Track x:Name="PART_Track" IsDirectionReversed="True">
                        <Track.Thumb>
                            <Thumb/> 
                        </Track.Thumb>
                    </Track>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="ValueChanged">
                            <BeginStoryboard>
                                <Storyboard TargetProperty="Opacity">
                                    <DoubleAnimation Duration="0:0:0.2" To="0.4"></DoubleAnimation>
                                    <DoubleAnimation BeginTime="0:0:1" Duration="0:0:0.2" To="0.1"></DoubleAnimation>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard TargetProperty="Opacity">
                                    <DoubleAnimation Duration="0:0:0.2" To="0.4"></DoubleAnimation>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard TargetProperty="Opacity">
                                    <DoubleAnimation BeginTime="0:0:1" Duration="0:0:0.2" To="0.1"></DoubleAnimation>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
                
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="ListView">
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="BorderThickness" Value="0"></Setter>
        <Setter Property="VirtualizingStackPanel.VirtualizationMode" Value="Recycling"></Setter>
    </Style>
    
    <Style TargetType="ListViewItem">
        <Setter Property="extension:ListViewItemExtension.IsClickToSelect" Value="True"/>
    </Style>
    
    <Style TargetType="comp:TextInput">
        <Setter Property="HorizontalScrollBarVisibility" Value="Auto"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="comp:TextInput">
                    <Border Name="Border" 
                            Background="{DynamicResource PrimaryBrush}" 
                            CornerRadius="3" BorderThickness="1">
                        <Grid>
                            <ScrollViewer x:Name="PART_ContentHost"
                                          Margin="{TemplateBinding Padding}"
                                          Background="Transparent"
                                          VerticalAlignment="Stretch"
                                          HorizontalAlignment="Stretch"
                                          HorizontalScrollBarVisibility="{TemplateBinding HorizontalScrollBarVisibility}"
                                          VerticalScrollBarVisibility="{TemplateBinding VerticalScrollBarVisibility}"
                                          Foreground="{DynamicResource SecondaryBrush}"/>
                            <TextBlock Name="Placeholder"
                                       Text="{Binding PlaceholderText,RelativeSource={RelativeSource AncestorType=comp:TextInput}}" 
                                       Background="Transparent"
                                       Foreground="#888"
                                       HorizontalAlignment="Left"
                                       Margin="5 0 0 0"
                                       VerticalAlignment="Center"
                                       IsHitTestVisible="False"></TextBlock>
                            
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard TargetName="Border" TargetProperty="Opacity">
                                        <DoubleAnimation To="0.6" Duration="0:0:0.15"></DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard TargetName="Border" TargetProperty="Opacity">
                                        <DoubleAnimation To="1" Duration="0:0:0.15"></DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="{DynamicResource SecondaryBrush}"></Setter>
    </Style>
    
    <Style TargetType="comp:ToggleButton">
        <Setter Property="Background" Value="{DynamicResource SecondaryBrush}"></Setter>
        <Setter Property="Foreground" Value="{DynamicResource SecondaryBrush}"></Setter>
        <Setter Property="RenderTransformOrigin" Value="0.5,0.5"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="comp:ToggleButton">
                    <Border Background="{TemplateBinding Background}" CornerRadius="5" 
                            HorizontalAlignment="Center" VerticalAlignment="Center" ClipToBounds="True">
                        <Grid Margin="3" Name="ContentGrid" 
                              HorizontalAlignment="Center" VerticalAlignment="Center">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition></ColumnDefinition>
                                <ColumnDefinition></ColumnDefinition>
                            </Grid.ColumnDefinitions>
                            <Canvas>
                                <Border Name="Active" HorizontalAlignment="Left" 
                                        Background="{DynamicResource PrimaryBrush}" 
                                        CornerRadius="5"></Border>
                            </Canvas>
                            <Border Name="LeftPresenter" 
                                    Padding="3 2.5" 
                                    RenderTransformOrigin="0.5,0.5">
                                <ContentPresenter Content="{Binding LeftContent, RelativeSource={RelativeSource AncestorType=comp:ToggleButton}}"
                                                  HorizontalAlignment="Center" 
                                                  VerticalAlignment="Center"></ContentPresenter>
                            </Border>
                            <Border Name="RightPresenter" Grid.Column="1" Padding="3 2.5" RenderTransformOrigin="0.5,0.5">
                                <ContentPresenter Content="{Binding RightContent, RelativeSource={RelativeSource AncestorType=comp:ToggleButton}}"
                                                  HorizontalAlignment="Center" 
                                                  VerticalAlignment="Center"></ContentPresenter>
                            </Border>
                            <Canvas>
                                <Border Name="LeftMask" Background="{TemplateBinding Background}"></Border>
                            </Canvas>
                            <Canvas Grid.Column="1">
                                <Border Name="RightMask" Background="{TemplateBinding Background}"></Border>
                            </Canvas>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="comp:Slider">
        <Setter Property="SnapsToDevicePixels" Value="False"></Setter>
        <Setter Property="TickFrequency" Value="1"/>
        <Setter Property="Interval" Value="100"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="comp:Slider">
                    <Grid>
                        <Border Name="Border" Height="3" CornerRadius="3"/>
                        <Track Name="PART_Track" IsDirectionReversed="False" ClipToBounds="False">
                            <Track.Thumb>
                                <Thumb>
                                    <Thumb.Template>
                                        <ControlTemplate TargetType="Thumb">
                                            <Ellipse Name="Ellipse" Width="5" Height="5" Fill="{DynamicResource SecondaryBrush}" 
                                                     RenderTransformOrigin="0.5,0.5">
                                                <Ellipse.RenderTransform>
                                                    <ScaleTransform ScaleY="1.8" ScaleX="1.8"></ScaleTransform>
                                                </Ellipse.RenderTransform>
                                            </Ellipse>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Trigger.EnterActions>
                                                        <BeginStoryboard>
                                                            <Storyboard TargetName="Ellipse">
                                                                <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" 
                                                                    To="2.5" Duration="0:0:0.15"></DoubleAnimation>
                                                                <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" 
                                                                    To="2.5" Duration="0:0:0.15"></DoubleAnimation>
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </Trigger.EnterActions>
                                                    <Trigger.ExitActions>
                                                        <BeginStoryboard>
                                                            <Storyboard TargetName="Ellipse">
                                                                <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" 
                                                                    To="1.8" Duration="0:0:0.15"></DoubleAnimation>
                                                                <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" 
                                                                    To="1.8" Duration="0:0:0.15"></DoubleAnimation>
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </Trigger.ExitActions>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Thumb.Template>
                                </Thumb>
                            </Track.Thumb>
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Command="Slider.DecreaseLarge">
                                    <RepeatButton.Template>
                                        <ControlTemplate TargetType="RepeatButton">
                                            <Border Height="3" 
                                                    Background="{DynamicResource SecondaryBrush_2}"
                                                    CornerRadius="3"/>
                                        </ControlTemplate>
                                    </RepeatButton.Template>
                                </RepeatButton>
                            </Track.DecreaseRepeatButton>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Command="Slider.IncreaseLarge">
                                    <RepeatButton.Template>
                                        <ControlTemplate TargetType="RepeatButton">
                                            <Rectangle Fill="Transparent" />
                                        </ControlTemplate>
                                    </RepeatButton.Template>
                                </RepeatButton>
                            </Track.IncreaseRepeatButton>
                        </Track>
                        <Grid VerticalAlignment="Bottom">
                            <Grid.RenderTransform>
                                <TranslateTransform Y="15"></TranslateTransform>
                            </Grid.RenderTransform>
                            <TextBlock Text="{Binding MinimumText, RelativeSource={RelativeSource AncestorType=comp:Slider}}" 
                                       HorizontalAlignment="Left"></TextBlock>
                            <TextBlock Text="{Binding ValueText, RelativeSource={RelativeSource AncestorType=comp:Slider}}" 
                                       HorizontalAlignment="Center"></TextBlock>
                            <TextBlock Text="{Binding MaximumText, RelativeSource={RelativeSource AncestorType=comp:Slider}}"
                                       HorizontalAlignment="Right"></TextBlock>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Resources>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="Foreground" Value="{DynamicResource SecondaryBrush_2}"></Setter>
                            <Setter Property="FontSize" 
                                    Value="{Binding ValueFontSize, RelativeSource={RelativeSource AncestorType=comp:Slider}}"></Setter>
                            <Setter Property="FontWeight" Value="Bold"></Setter>
                        </Style>
                    </ControlTemplate.Resources>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="comp:MaskControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="comp:MaskControl">
                    <Grid>
                        <Border Name="Mask"
                                CornerRadius="0 0 10 10" 
                                Background="{TemplateBinding MaskColor}" 
                                Opacity="{TemplateBinding MaskOpacity}" 
                                HorizontalAlignment="Stretch" 
                                VerticalAlignment="Stretch"></Border>
                        <ContentPresenter></ContentPresenter>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="comp:CollapsePanel">
        <Setter Property="Background" Value="{DynamicResource PrimaryBrush}"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="comp:CollapsePanel">
                    <Border Name="Main" 
                            Height="{Binding MainHeight, RelativeSource={RelativeSource AncestorType=comp:CollapsePanel}, Mode=OneTime}" 
                            Style="{StaticResource Rect}" CornerRadius="10" RenderTransformOrigin="0.5,0"
                            Background="{TemplateBinding Background}"
                            Margin="0 10">
                        <Border.RenderTransform>
                            <ScaleTransform ScaleX="1" ScaleY="1"></ScaleTransform>
                        </Border.RenderTransform>
                        <StackPanel Name="EntirePanel">
                                <Grid Height="{Binding MainHeight, RelativeSource={RelativeSource AncestorType=comp:CollapsePanel}}">
                                    <Grid Margin="0 0 40 0">
                                        <ContentPresenter Content="{TemplateBinding TitleContent}"></ContentPresenter>
                                    </Grid>
                                    <TextBlock Name="StateIcon" Text="&#xe903;" FontFamily="{StaticResource IconFontFamily}" 
                                               HorizontalAlignment="Right" VerticalAlignment="Center" 
                                               FontSize="{Binding ToggleBtnSize, RelativeSource={RelativeSource AncestorType=comp:CollapsePanel}}" Margin="10 0"
                                               RenderTransformOrigin="0.5,0.5">
                                        <TextBlock.RenderTransform>
                                            <RotateTransform Angle="180"></RotateTransform>
                                        </TextBlock.RenderTransform>
                                    </TextBlock>
                                    <Border Name="TriggerBorder"
                                            CornerRadius="10" IsHitTestVisible="True"
                                            Opacity="0" Background="#f1f1f1"></Border>
                                    <ContentPresenter Content="{TemplateBinding TitleOperateContent}" Margin="0 0 40 0"></ContentPresenter>
                                </Grid>
                                <Border Margin="10 0 10 0" Height="1" Background="Black" Visibility="{Binding NeedDivider, RelativeSource={RelativeSource AncestorType=comp:CollapsePanel}}"></Border>
                                <ContentPresenter Name="ContentPresenter"></ContentPresenter>
                            </StackPanel>
                    </Border>
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="OpenAnim">
                            <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(RotateTransform.Angle)"
                                             To="0" Duration="0:0:0.2" 
                                             EasingFunction="{StaticResource CubicEase}"></DoubleAnimation>
                        </Storyboard>
                        <Storyboard x:Key="CloseAnim">
                            <DoubleAnimation Storyboard.TargetProperty="Height"
                                             To="{Binding MainHeight, RelativeSource={RelativeSource AncestorType=comp:CollapsePanel}, Mode=OneTime}" Duration="0:0:0.2" EasingFunction="{StaticResource CubicEase}"></DoubleAnimation>
                            <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(RotateTransform.Angle)"
                                             To="180" Duration="0:0:0.2"
                                             EasingFunction="{StaticResource CubicEase}"></DoubleAnimation>
                        </Storyboard>
                        <Storyboard x:Key="MouseDownAnim">
                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" 
                                             To="0.99" Duration="0:0:0.2"
                                             EasingFunction="{StaticResource CubicEase}"></DoubleAnimation>
                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" 
                                             To="0.99" Duration="0:0:0.2"
                                             EasingFunction="{StaticResource CubicEase}"></DoubleAnimation>
                        </Storyboard>
                        <Storyboard x:Key="MouseUpAnim">
                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" 
                                             To="1" Duration="0:0:0.2"
                                             EasingFunction="{StaticResource CubicEase}"></DoubleAnimation>
                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" 
                                             To="1" Duration="0:0:0.2"
                                             EasingFunction="{StaticResource CubicEase}"></DoubleAnimation>
                        </Storyboard>
                    </ControlTemplate.Resources>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="comp:TopButton">
        <Setter Property="HorizontalAlignment" Value="Right"></Setter>
        <Setter Property="VerticalAlignment" Value="Bottom"></Setter>
        <Setter Property="Margin" Value="30 40"></Setter>
        <Setter Property="FontSize" Value="16"></Setter>
        <Setter Property="Width" Value="40"></Setter>
        <Setter Property="Height" Value="40"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="comp:TopButton">
                    <Border Background="{DynamicResource PrimaryBrush_4}"
                            Width="{TemplateBinding Width}"
                            Height="{TemplateBinding Height}"
                            CornerRadius="999">
                        <TextBlock Text="&#xe604;"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center"
                                   Foreground="{DynamicResource PrimaryBrush}"
                                   FontFamily="{StaticResource IconFontFamily}"></TextBlock>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>